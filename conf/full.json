{
  // the multiple processes to use.
  // 0 to use runtime.NumCPU() as workers.
  // default: 0
  "workers": 0,
  // the RTMP listen port.
  // default: 1935
  "listen": 1935,
  // whether start as deamon
  // @remark: donot support reload.
  // default: true
  "daemon": true,
  // the default chunk size is 128, max is 65536,
  // some client does not support chunk size change,
  // however, most clients supports it and it can improve
  // performance about 10%.
  // default: 60000
  "chunk_size": 60000,
  // go runtime section.
  "go": {
    // the interval for gc, in seconds. 0 to not set.
    // default: 0
    "gc_interval": 0,
    // the percent for gc. 0 to not set.
    // default: 0
    "gc_percent": 0,
    // the interval for gc trace, in seconds. 0 to disable.
    // default: 0
    "gc_trace": 0,
    // whether use private writev.
    // default: false
    "writev": false,
    // the cpu profile filename, for example
    //    go tool pprof oryx cpu.prof
    // default or empty string to ignore.
    "cpu_profile": "cpu.prof",
    // the memory profile filename, for example
    //    go tool pprof oryx mem.prof
    // default for empty string to ignore.
    "mem_profile": "mem.prof"
  },
  // the log section.
  "log": {
    // the log tank, console or file.
    // if console, print log to console.
    // if file, write log to file. requires file if log to file.
    // default: file
    "tank": "file",
    // the log level, for all log tanks.
    // can be: verbose, info, trace, warn, error
    // default: trace
    "level": "trace",
    // when tank is file, specifies the log file.
    // default: oryx.log
    "file": "oryx.log"
  },
  // heartbeat/stats sections
  // heartbeat to api server
  // @remark, the ip report to server, is retrieve from system stat,
  // which need the config item stats.network.
  "heartbeat": {
    // whether heartbeat is enalbed.
    // default: false
    "enabled": false,
    // the interval seconds for heartbeat,
    // recommend 0.3,0.6,0.9,1.2,1.5,1.8,2.1,2.4,2.7,3,...,6,9,12,....
    // default: 9.9
    "interval": 9.3,
    // when startup, oryx will heartbeat to this api.
    // @remark: must be a restful http api url, where oryx will POST with following data:
    //   {
    //       "device_id": "my-oryx-device",
    //       "ip": "192.168.1.100"
    //   }
    // default: http://127.0.0.1:8085/api/v1/servers
    "url": "http://127.0.0.1:8085/api/v1/servers",
    // the id of devide.
    "device_id": "my-oryx-device",
    // whether report with summaries
    // if on, put /api/v1/summaries to the request data:
    //   {
    //       "summaries": summaries object.
    //   }
    // @remark: optional config.
    // default: false
    "summaries": false,
    // the api listen port for heartbeat.
    // user can post to this api and the heartbeat will carry
    // the information to report to server.
    // @remark the default listen to 2015 for SRS.
    // default: 2015
    "listen": 2015
  },
  // system statistics section.
  // the main cycle will retrieve the system stat,
  // for example, the cpu/mem/network/disk-io data,
  // the http api, for instance, /api/v1/summaries will show these data.
  // @remark the heartbeat depends on the network,
  //       for example, the eth0 maybe the device which index is 0.
  "stats": {
    // the index of device ip.
    // we may retrieve more than one network device.
    // default: 0
    "network": 0,
    // the device name to stat the disk iops.
    // ignore the device of /proc/diskstats if not configed.
    "disk": ["sda", "sdb", "xvda", "xvdb"]
  },
  // the debug section, for example, to dumps the bytes received from peer.
  "debug": {
    // whether dump the recv bytes(first and last 16bytes) of rtmp.
    // default: false
    "rtmp_dump_recv": false
  },
  // RTMP/HTTP VHOST sections
  "vhosts": [
    // the __defaultVhost__ is the default vhost
    // for example, user use ip to access the stream: rtmp://192.168.1.2/live/livestream.
    // for which cannot identify the required vhost.
    {
      "name": "__defaultVhost__",
      // whether enable min delay mode for vhost.
      // for min latence mode:
      // 1. disable the publish.mr for vhost.
      // 2. use timeout for cond wait for consumer queue.
      // @see https://github.com/ossrs/srs/issues/257
      // default: false
      "min_latency": false,
      // for play client, both RTMP and other stream clients,
      // for instance, the HTTP FLV stream clients.
      "play": {
        // set the MW(merged-write) latency in ms.
        // SRS always set mw on, so we just set the latency value.
        // the latency of stream >= mw_latency + mr_latency
        // the value recomment is [300, 1800]
        // default: 350
        "mw_latency": 350
      }
    }
  ]
}